---
- name: Deploy monitoring stack (Prometheus, Grafana, Blackbox)
  hosts: swarm_manager
  become: yes
  vars:
    stack_name: monitoring
    monitor_dir: /home/jenkins/monitoring
    stack_file: "{{ monitor_dir }}/monitoring-stack.yml"
    prometheus_config: "{{ monitor_dir }}/prometheus.yml"
    alert_rules: "{{ monitor_dir }}/alert.rules.yml"
    grafana_data_dir: /var/lib/grafana
    overlay_network: "{{ overlay_network | default('healthify_net') }}"
    prometheus_version: "{{ prometheus_version | default('v2.54.1') }}"
    blackbox_version: "{{ blackbox_version | default('v0.25.0') }}"
    grafana_version: "{{ grafana_version | default('10.4.6') }}"

  tasks:

    - name: Ensure monitoring directory exists
      ansible.builtin.file:
        path: "{{ monitor_dir }}"
        state: directory
        owner: jenkins
        group: jenkins
        mode: '0755'
        recurse: yes
      tags: [monitoring]

    - name: Render monitoring-stack.yml from template
      ansible.builtin.template:
        src: files/monitoring-stack.yml.j2
        dest: "{{ stack_file }}"
        owner: jenkins
        group: jenkins
        mode: '0644'
      tags: [monitoring]

    - name: Upload Prometheus config
      ansible.builtin.copy:
        src: files/prometheus.yml
        dest: "{{ prometheus_config }}"
        owner: jenkins
        group: jenkins
        mode: '0644'
      tags: [monitoring]

    - name: Upload alert rules
      ansible.builtin.copy:
        src: files/alert.rules.yml
        dest: "{{ alert_rules }}"
        owner: jenkins
        group: jenkins
        mode: '0644'
      tags: [monitoring]

    - name: Ensure Grafana data directory exists
      ansible.builtin.file:
        path: "{{ grafana_data_dir }}"
        state: directory
        owner: 472
        group: 472
        mode: '0755'
      tags: [monitoring]

    - name: Verify Docker daemon is running
      shell: docker info
      register: docker_info
      changed_when: false
      failed_when: docker_info.rc != 0
      tags: [monitoring]


    - name: Deploy or update monitoring stack
      ansible.builtin.shell: >
        docker stack deploy --with-registry-auth -c {{ stack_file }} {{ stack_name }} --prune
      changed_when: false
      tags: [monitoring]

    - name: Wait for monitoring services to start
      ansible.builtin.pause:
        seconds: 5
      tags: [monitoring]

    - name: Check monitoring services until healthy
      ansible.builtin.shell: |
        docker service ls --filter name={{ stack_name }} --format '{{ "{{.Name}}" }} {{ "{{.Replicas}}" }}' |
        awk '{split($2,a,"/"); if(a[1]!=a[2]) exit 1}'
      register: monitor_status
      retries: 12    # 12*5s = ~1 min
      delay: 5
      until: monitor_status.rc == 0
      changed_when: false
      tags: [monitoring]

    - name: Show final monitoring service status
      ansible.builtin.debug:
        msg: "{{ monitor_status.stdout_lines }}"
      tags: [monitoring]
