version: '3.2'

networks:
  {{ overlay_network }}:
    external: true
    name: {{ stack_name }}_{{ overlay_network }}

volumes:
  prometheus_data:
  grafana_data:

services:

  prometheus:
    image: prom/prometheus:{{ prometheus_version | default('v2.54.1') }}
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    ports:
      - "{{ prometheus_port | default('9090') }}:9090"
    networks:
      - {{ overlay_network }}
    volumes:
      - prometheus_data:/prometheus
      - {{ prometheus_config_path | default('/home/jenkins/monitoring/prometheus.yml') }}:/etc/prometheus/prometheus.yml:ro
      - {{ prometheus_alerts_path | default('/home/jenkins/monitoring/alert.rules.yml') }}:/etc/prometheus/alert.rules.yml:ro
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
      labels:
        monitoring: "true"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:{{ prometheus_port | default('9090') }}/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  blackbox-exporter:
    image: prom/blackbox-exporter:{{ blackbox_version | default('v0.25.0') }}
    ports:
      - "{{ blackbox_port | default('9115') }}:9115"
    networks:
      - {{ overlay_network }}
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
      labels:
        monitoring: "true"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:{{ blackbox_port | default('9115') }}/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  grafana:
    image: grafana/grafana:{{ grafana_version | default('10.4.6') }}
    environment:
      GF_SECURITY_ADMIN_USER: {{ grafana_admin_user | default('admin') }}
      GF_SECURITY_ADMIN_PASSWORD: {{ grafana_admin_password | default('admin123') }}
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - "{{ grafana_port | default('3000') }}:3000"
    networks:
      - {{ overlay_network }}
    volumes:
      - grafana_data:/var/lib/grafana
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
      labels:
        monitoring: "true"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:{{ grafana_port | default('3000') }}/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
