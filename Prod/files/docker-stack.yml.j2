version: '3.2'

networks:
  {{ overlay_network }}:
    external: true

volumes:
  pgdata:

services:

  postgres:
    image: postgres:{{ POSTGRES_VERSION | default('15') }}
    environment:
      POSTGRES_USER: {{ POSTGRES_USER }}
      POSTGRES_PASSWORD: {{ POSTGRES_PASSWORD }}
      POSTGRES_DB: {{ POSTGRES_DB }}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - {{ overlay_network }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ POSTGRES_USER }} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
      labels:
        monitoring: "true"

  backend:
    image: {{ registry_ip }}:5000/healthify-backend:{{ version }}
    env_file:
      - {{ env_file }}
    ports:
      - "{{ backend_port | default('5050') }}:5050"
    networks:
      - {{ overlay_network }}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:5050/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      labels:
        monitoring: "true"

  frontend:
    image: {{ registry_ip }}:5000/healthify-frontend:{{ version }}
    env_file:
      - {{ env_file }}
    environment:
      API_BASE_URL: "http://{{ backend_host }}:{{ backend_port | default('5050') }}"
    ports:
      - "{{ frontend_port | default('5173') }}:5173"
    networks:
      - {{ overlay_network }}
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:5173/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      labels:
        monitoring: "true"
