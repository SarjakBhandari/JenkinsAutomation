---
- name: Deploy healthify fullstack app with load balancing (CLI only)
  hosts: swarm_manager
  become: yes
  vars:
    stack_name: healthify
    registry_ip: "{{ registry_ip | default('192.168.50.4') }}"
    version: "{{ version | default('latest') }}"
    stack_file: "/home/{{ ansible_user }}/docker-stack.yml"
    env_file: "/home/{{ ansible_user }}/.env"
    overlay_network: healthify_net

  tasks:
    - name: Ensure overlay network exists
      ansible.builtin.shell: |
        if ! docker network inspect {{ overlay_network }} >/dev/null 2>&1; then
          docker network create --driver overlay --attachable {{ overlay_network }}
        fi
      changed_when: false

    - name: Upload .env file to manager node
      ansible.builtin.copy:
        src: files/env/.env
        dest: "{{ env_file }}"
        mode: '0644'

    - name: Render docker-stack.yml from template
      ansible.builtin.template:
        src: files/docker-stack.yml.j2
        dest: "{{ stack_file }}"
        mode: '0644'

    - name: Pull backend image from registry
      ansible.builtin.shell: >
        docker pull {{ registry_ip }}:5000/healthify-backend:{{ version }}
      changed_when: false

    - name: Pull frontend image from registry
      ansible.builtin.shell: >
        docker pull {{ registry_ip }}:5000/healthify-frontend:{{ version }}
      changed_when: false

    - name: Deploy or update Docker stack
      ansible.builtin.shell: >
        docker stack deploy --with-registry-auth -c {{ stack_file }} {{ stack_name }}
      changed_when: false

    - name: Wait for services to stabilize
      ansible.builtin.shell: |
        sleep 5
        docker service ls --filter name={{ stack_name }} --format '{{ "{{.Name}}" }} {{ "{{.Replicas}}" }}'
      register: service_status
      changed_when: false

    - name: Display deployed services
      ansible.builtin.debug:
        msg: "{{ service_status.stdout_lines }}"
