---
- name: Deploy healthify fullstack app with load balancing (CLI only)
  hosts: swarm_manager
  become: yes
  vars:
    stack_name: healthify
    registry_ip: "{{ registry_ip | default('192.168.50.4') }}"
    version: "{{ version | default('latest') }}"
    stack_file: "/home/{{ ansible_user }}/docker-stack.yml"
    env_file: "/home/{{ ansible_user }}/.env"
    backend_port: "{{ backend_port | default('5000') }}"
    frontend_port: "{{ frontend_port | default('5173') }}"

  tasks:

    - name: Ensure overlay network exists
      ansible.builtin.shell: |
        docker network inspect {{ overlay_network | default('healthify_net') }} >/dev/null 2>&1 || \
        docker network create --driver overlay --attachable {{ overlay_network | default('healthify_net') }}


    - name: Upload .env file to manager node
      ansible.builtin.copy:
        src: files/env/.env
        dest: "{{ env_file }}"
        mode: '0644'

    - name: Render docker-stack.yml from template
      ansible.builtin.template:
        src: files/docker-stack.yml.j2
        dest: "{{ stack_file }}"
        mode: '0644'

    - name: Pre-pull images from registry
      ansible.builtin.shell: >
        docker pull {{ registry_ip }}:5000/healthify-backend:{{ version }} &&
        docker pull {{ registry_ip }}:5000/healthify-frontend:{{ version }}
      changed_when: false

    - name: Deploy or update Docker stack
      ansible.builtin.shell: >
        docker stack deploy --with-registry-auth -c {{ stack_file }} {{ stack_name }}
      changed_when: false

    - name: Wait for services to start (initial delay)
      ansible.builtin.pause:
        seconds: 5

    - name: Check service replicas until healthy
      ansible.builtin.shell: |
        docker service ls --filter name={{ stack_name }} --format '{{ "{{.Name}}" }} {{ "{{.Replicas}}" }}' |
        awk '{split($2,a,"/"); if(a[1]!=a[2]) exit 1}'
      register: service_status
      retries: 12
      delay: 5
      until: service_status.rc == 0
      changed_when: false

    - name: Display deployed services
      ansible.builtin.debug:
        msg: "{{ service_status.stdout_lines }}"
