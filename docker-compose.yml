version: '3.2'

services:
  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: healthify_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - healthify_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./app/backend
      dockerfile: ../Dockerfile
    container_name: healthify_backend
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../.env
    ports:
      - "${BACKEND_PORT}:5000"
    networks:
      - healthify_net
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    container_name: healthify_frontend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - healthify_net
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  pgdata:

networks:
  healthify_net:
    driver: bridge